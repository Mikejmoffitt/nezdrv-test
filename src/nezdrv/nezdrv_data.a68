; ==============================================================================
;
; NEZDRV Audio Data
;
; As the Z80 can only read data from the 68000 side in windows 0f 0x8000 bytes
; in length, contiguous data must not spawn a 32K boundary.
;
; 
;
; ==============================================================================


	.section	.rodata

;
; 68000-Side Data
;
; The BGM and PCM lsit are processed on the 68000 side, so they are not
; bound by any particular alignment requirements.
;

; BGM data is loaded from this list when a play command is issued.
	.global	nezdrv_data_bgm
nezdrv_data_bgm:
	dc.l	nezdrv_data_bgm_dangus
	dc.l	nezdrv_data_bgm_straight_life
	dc.l	nezdrv_data_bgm_peter_gunn

; PCM samples are registered one at a time during initialization.
	.global	nezdrv_data_pcm
nezdrv_data_pcm:
	dc.l	pcm_kick1  ; 00
	dc.l	pcm_snare1 ; 01
	dc.l	-1  ; Terminator.

;
; Z80-side Data
;
; This data is read by the Z80 through a 32K window (0x8000) so care must be
; taken to make sure that data does not spawn a 32K boundary.
;
; This data is referenced by pointer lists on the 68K side, and the addresses
; are transformed into appropriate offsets and passed to the NEZDRV mailbox
; interface.

	.align	$8000

; All sound effect data is assembled and loaded as one blob, loaded once at
; init and kept in memory indefinitely.
	.global	nezdrv_data_sfx
nezdrv_data_sfx:
	.incbin	"wrk/sound/sfx.bin"
nezdrv_data_bgm_dangus:
	.incbin	"wrk/sound/bgm/dangus.bin"
nezdrv_data_bgm_straight_life:
	.incbin	"wrk/sound/bgm/straight_life.bin"
nezdrv_data_bgm_peter_gunn:
	.incbin	"wrk/sound/bgm/peter_gunn.bin"
	
; PCM data is not copied, but is read through the 32K window during playback.
; If possible, keeping PCM data in the same window will reduce the chance of
; processing overload when switching between one sample and another.
pcm_kick1:
	.incbin	"sound/pcm/kick1.bin"
pcm_snare1:
	.incbin	"sound/pcm/snare1.bin"

	.align	2
